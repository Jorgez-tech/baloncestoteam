[{"filePath":"c:\\Users\\jzuta\\proyectos\\baloncestoteam\\frontend\\src\\__tests__\\routes.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"c:\\Users\\jzuta\\proyectos\\baloncestoteam\\frontend\\src\\api\\client.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'process' is not defined.","line":4,"column":22,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":29}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import axios from 'axios';\r\n\r\n// Cambiar baseURL para asegurar consistencia\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api/v1';\r\n\r\nexport const apiClient = axios.create({\r\n    baseURL: API_BASE_URL,\r\n    headers: { 'Content-Type': 'application/json' },\r\n});\r\n\r\napiClient.interceptors.request.use(\r\n    (config) => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) config.headers.Authorization = `Bearer ${token}`;\r\n        return config;\r\n    },\r\n    (error) => Promise.reject(error)\r\n);\r\n\r\napiClient.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n        if (error.response?.status === 401) {\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('user');\r\n            window.location.href = '/login';\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Asegurar que todos los endpoints usen el prefijo /api/v1\r\nexport const authAPI = {\r\n    login: (credentials) => apiClient.post('/auth/login', credentials),\r\n    register: (userData) => apiClient.post('/auth/register', userData),\r\n    logout: () => apiClient.post('/auth/logout'),\r\n    getProfile: () => apiClient.get('/auth/profile'),\r\n};\r\n\r\nexport const playersAPI = {\r\n    getAll: (params = {}) => apiClient.get('/players', { params }),\r\n    getById: (id) => apiClient.get(`/players/${id}`),\r\n    create: (playerData) => apiClient.post('/players', playerData),\r\n    update: (id, playerData) => apiClient.put(`/players/${id}`, playerData),\r\n    delete: (id) => apiClient.delete(`/players/${id}`),\r\n};\r\n\r\nexport const usersAPI = {\r\n    getAll: (params = {}) => apiClient.get('/users', { params }),\r\n    getById: (id) => apiClient.get(`/users/${id}`),\r\n    update: (id, userData) => apiClient.put(`/users/${id}`, userData),\r\n    delete: (id) => apiClient.delete(`/users/${id}`),\r\n};\r\n\r\nexport const imagesAPI = {\r\n    upload: (formData) => apiClient.post('/images/upload', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n    }),\r\n    getAll: (params = {}) => apiClient.get('/images', { params }),\r\n    delete: (id) => apiClient.delete(`/images/${id}`),\r\n};\r\n\r\nexport default apiClient;\r\n","usedDeprecatedRules":[]},{"filePath":"c:\\Users\\jzuta\\proyectos\\baloncestoteam\\frontend\\src\\components\\AdminDashboard.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"c:\\Users\\jzuta\\proyectos\\baloncestoteam\\frontend\\src\\components\\App.jsx","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'useState' is defined but never used. Allowed unused vars must match /^_/u.","line":1,"column":17,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":25},{"ruleId":"no-unused-vars","severity":2,"message":"'useEffect' is defined but never used. Allowed unused vars must match /^_/u.","line":1,"column":27,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":36},{"ruleId":"react/prop-types","severity":1,"message":"'children' is missing in props validation","line":37,"column":27,"nodeType":"Property","messageId":"missingPropType","endLine":37,"endColumn":35},{"ruleId":"react/prop-types","severity":1,"message":"'requireAdmin' is missing in props validation","line":37,"column":37,"nodeType":"Property","messageId":"missingPropType","endLine":37,"endColumn":57},{"ruleId":"react/prop-types","severity":1,"message":"'children' is missing in props validation","line":56,"column":28,"nodeType":"Property","messageId":"missingPropType","endLine":56,"endColumn":36},{"ruleId":"react/prop-types","severity":1,"message":"'children' is missing in props validation","line":71,"column":22,"nodeType":"Property","messageId":"missingPropType","endLine":71,"endColumn":30}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n// Components\r\nimport Header from './Header.jsx';\r\nimport Footer from './footer';\r\nimport Login from './Login';\r\nimport Signup from './Signup';\r\nimport Gallery from './Gallery';\r\nimport AdminDashboard from './AdminDashboard';\r\nimport PlayerList from './PlayerList';\r\nimport PlayerProfile from './PlayerProfile';\r\nimport Home from './Home';\r\nimport Profile from './Profile';\r\n\r\n// Context\r\nimport { AuthProvider, useAuth } from '../context/AuthContext';\r\n\r\n// Styles\r\nimport '../styles/App.css';\r\n\r\n// Create a client\r\nconst queryClient = new QueryClient({\r\n    defaultOptions: {\r\n        queries: {\r\n            refetchOnWindowFocus: false,\r\n            retry: 1,\r\n        },\r\n    },\r\n});\r\n\r\n\r\n// Protected Route Component\r\nconst ProtectedRoute = ({ children, requireAdmin = false }) => {\r\n    const { user, loading } = useAuth();\r\n\r\n    if (loading) {\r\n        return <div className=\"loading\">Cargando...</div>;\r\n    }\r\n\r\n    if (!user) {\r\n        return <Navigate to=\"/login\" replace />;\r\n    }\r\n\r\n    if (requireAdmin && user.role !== 'admin') {\r\n        return <Navigate to=\"/\" replace />;\r\n    }\r\n\r\n    return children;\r\n};\r\n\r\n// Public Only Route Component\r\nconst PublicOnlyRoute = ({ children }) => {\r\n    const { user, loading } = useAuth();\r\n\r\n    if (loading) {\r\n        return <div className=\"loading\">Cargando...</div>;\r\n    }\r\n\r\n    if (user) {\r\n        return <Navigate to=\"/\" replace />;\r\n    }\r\n\r\n    return children;\r\n};\r\n\r\n// Main App Layout\r\nconst AppLayout = ({ children }) => {\r\n    return (\r\n        <div className=\"app\">\r\n            <Header />\r\n            <main className=\"main-content\">\r\n                {children}\r\n            </main>\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\n// Main App Component\r\nfunction App() {\r\n    return (\r\n        <QueryClientProvider client={queryClient}>\r\n            <AuthProvider>\r\n                <Router>\r\n                    <div className=\"App\">\r\n                        <Routes>\r\n                            {/* Public Routes */}\r\n\r\n                            <Route\r\n                                path=\"/login\"\r\n                                element={\r\n                                    <PublicOnlyRoute>\r\n                                        <AppLayout>\r\n                                            <Login />\r\n                                        </AppLayout>\r\n                                    </PublicOnlyRoute>\r\n                                }\r\n                            />\r\n                            <Route\r\n                                path=\"/signup\"\r\n                                element={\r\n                                    <PublicOnlyRoute>\r\n                                        <AppLayout>\r\n                                            <Signup />\r\n                                        </AppLayout>\r\n                                    </PublicOnlyRoute>\r\n                                }\r\n                            />\r\n\r\n                            {/* Public Routes */}\r\n                            <Route\r\n                                path=\"/\"\r\n                                element={\r\n                                    <AppLayout>\r\n                                        <Home />\r\n                                    </AppLayout>\r\n                                }\r\n                            />\r\n                            <Route\r\n                                path=\"/gallery\"\r\n                                element={\r\n                                    <AppLayout>\r\n                                        <Gallery />\r\n                                    </AppLayout>\r\n                                }\r\n                            />\r\n                            <Route\r\n                                path=\"/players\"\r\n                                element={\r\n                                    <AppLayout>\r\n                                        <PlayerList />\r\n                                    </AppLayout>\r\n                                }\r\n                            />\r\n                            <Route\r\n                                path=\"/players/:id\"\r\n                                element={\r\n                                    <AppLayout>\r\n                                        <PlayerProfile />\r\n                                    </AppLayout>\r\n                                }\r\n                            />\r\n\r\n                            {/* Admin Routes */}\r\n                            <Route\r\n                                path=\"/admin\"\r\n                                element={\r\n                                    <ProtectedRoute requireAdmin={true}>\r\n                                        <AppLayout>\r\n                                            <AdminDashboard />\r\n                                        </AppLayout>\r\n                                    </ProtectedRoute>\r\n                                }\r\n                            />\r\n                            <Route\r\n                                path=\"/profile\"\r\n                                element={\r\n                                    <ProtectedRoute>\r\n                                        <AppLayout>\r\n                                            <Profile />\r\n                                        </AppLayout>\r\n                                    </ProtectedRoute>\r\n                                }\r\n                            />\r\n\r\n                            {/* 404 Route */}\r\n                            <Route\r\n                                path=\"*\"\r\n                                element={\r\n                                    <AppLayout>\r\n                                        <div className=\"not-found\">\r\n                                            <h2>Página no encontrada</h2>\r\n                                            <p>La página que buscas no existe.</p>\r\n                                        </div>\r\n                                    </AppLayout>\r\n                                }\r\n                            />\r\n                        </Routes>\r\n\r\n                        {/* Toast notifications */}\r\n                        <ToastContainer\r\n                            position=\"top-right\"\r\n                            autoClose={5000}\r\n                            hideProgressBar={false}\r\n                            newestOnTop={false}\r\n                            closeOnClick\r\n                            rtl={false}\r\n                            pauseOnFocusLoss\r\n                            draggable\r\n                            pauseOnHover\r\n                        />\r\n                    </div>\r\n                </Router>\r\n            </AuthProvider>\r\n        </QueryClientProvider>\r\n    );\r\n}\r\n\r\nexport default App;","usedDeprecatedRules":[]},{"filePath":"c:\\Users\\jzuta\\proyectos\\baloncestoteam\\frontend\\src\\components\\Gallery.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"c:\\Users\\jzuta\\proyectos\\baloncestoteam\\frontend\\src\\components\\Header.jsx","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":15,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":15,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[483,571],"text":""},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport {\r\n    Bars3Icon,\r\n    XMarkIcon,\r\n    UserIcon,\r\n    ArrowRightOnRectangleIcon\r\n} from '@heroicons/react/24/outline';\r\n\r\nconst Header = () => {\r\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n    const { user, logout, isAuthenticated, isAdmin, authVersion } = useAuth();\r\n    // Log para depuración de contexto\r\n    console.log('HEADER CONTEXT:', { user, logout, isAuthenticated, isAdmin, authVersion });\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogout = async () => {\r\n        await logout();\r\n        navigate('/login');\r\n        setIsMenuOpen(false);\r\n    };\r\n\r\n    const toggleMenu = () => {\r\n        setIsMenuOpen(!isMenuOpen);\r\n    };\r\n\r\n    const closeMenu = () => {\r\n        setIsMenuOpen(false);\r\n    };\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"header-container\">\r\n                {/* Logo */}\r\n                <div className=\"header-logo\">\r\n                    <Link to=\"/\" onClick={closeMenu}>\r\n                        <h1>🏀 Basketball Team</h1>\r\n                    </Link>\r\n                </div>\r\n\r\n                {/* Desktop Navigation */}\r\n                <nav className=\"desktop-nav\">\r\n                    <ul className=\"nav-links\">\r\n                        <li>\r\n                            <Link to=\"/\">Inicio</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/gallery\">Galería</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/players\">Jugadores</Link>\r\n                        </li>\r\n                        {isAdmin && (\r\n                            <li>\r\n                                <Link to=\"/admin\">Admin</Link>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n\r\n                    {/* User Menu simplificado */}\r\n                    <div className=\"user-menu\">\r\n                        {isAuthenticated ? (\r\n                            <button className=\"login-btn\" onClick={handleLogout}>\r\n                                Cerrar Sesión\r\n                            </button>\r\n                        ) : (\r\n                            <Link to=\"/login\" className=\"login-btn\">\r\n                                Iniciar Sesión\r\n                            </Link>\r\n                        )}\r\n                    </div>\r\n                </nav>\r\n\r\n                {/* Mobile Menu Button */}\r\n                <button\r\n                    className=\"mobile-menu-btn\"\r\n                    onClick={toggleMenu}\r\n                    aria-label=\"Toggle menu\"\r\n                >\r\n                    {isMenuOpen ? (\r\n                        <XMarkIcon className=\"h-6 w-6\" />\r\n                    ) : (\r\n                        <Bars3Icon className=\"h-6 w-6\" />\r\n                    )}\r\n                </button>\r\n            </div>\r\n\r\n            {/* Mobile Navigation */}\r\n            {isMenuOpen && (\r\n                <div className=\"mobile-nav\">\r\n                    <div className=\"mobile-nav-content\">\r\n                        <ul className=\"mobile-nav-links\">\r\n                            <li>\r\n                                <Link to=\"/\" onClick={closeMenu}>Inicio</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/gallery\" onClick={closeMenu}>Galería</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/players\" onClick={closeMenu}>Jugadores</Link>\r\n                            </li>\r\n                            {isAdmin && (\r\n                                <li>\r\n                                    <Link to=\"/admin\" onClick={closeMenu}>Admin</Link>\r\n                                </li>\r\n                            )}\r\n                        </ul>\r\n\r\n                        {/* Mobile User Menu */}\r\n                        <div className=\"mobile-user-menu\">\r\n                            {isAuthenticated ? (\r\n                                <>\r\n                                    <div className=\"mobile-user-info\">\r\n                                        <UserIcon className=\"h-5 w-5\" />\r\n                                        <span>{user?.email}</span>\r\n                                    </div>\r\n                                    {/* <Link to=\"/profile\" onClick={closeMenu} className=\"mobile-menu-item\">Mi Perfil</Link> */}\r\n                                    <button\r\n                                        onClick={handleLogout}\r\n                                        className=\"mobile-menu-item logout-btn\"\r\n                                    >\r\n                                        <ArrowRightOnRectangleIcon className=\"h-4 w-4\" />\r\n                                        Cerrar Sesión\r\n                                    </button>\r\n                                </>\r\n                            ) : (\r\n                                <div className=\"mobile-auth-buttons\">\r\n                                    <Link to=\"/login\" onClick={closeMenu} className=\"mobile-login-btn\">\r\n                                        Iniciar Sesión\r\n                                    </Link>\r\n                                    <Link to=\"/signup\" onClick={closeMenu} className=\"mobile-signup-btn\">\r\n                                        Registrarse\r\n                                    </Link>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","usedDeprecatedRules":[]},{"filePath":"c:\\Users\\jzuta\\proyectos\\baloncestoteam\\frontend\\src\\components\\Home.js","messages":[{"ruleId":"react/prop-types","severity":1,"message":"'isOpen' is missing in props validation","line":5,"column":25,"nodeType":"Property","messageId":"missingPropType","endLine":5,"endColumn":31},{"ruleId":"react/prop-types","severity":1,"message":"'onClose' is missing in props validation","line":5,"column":33,"nodeType":"Property","messageId":"missingPropType","endLine":5,"endColumn":40}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\n// Modal de contacto\r\nconst ContactModal = ({ isOpen, onClose }) => {\r\n    const [form, setForm] = useState({ nombre: '', email: '', mensaje: '' });\r\n    const [enviado, setEnviado] = useState(false);\r\n\r\n    if (!isOpen) return null;\r\n\r\n    const handleChange = (e) => {\r\n        setForm({ ...form, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setEnviado(true);\r\n        setTimeout(() => {\r\n            setEnviado(false);\r\n            onClose();\r\n            setForm({ nombre: '', email: '', mensaje: '' });\r\n        }, 2000);\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-overlay\">\r\n            <div className=\"modal-content\">\r\n                <button className=\"modal-close\" onClick={onClose} aria-label=\"Cerrar\">×</button>\r\n                {!enviado ? (\r\n                    <form className=\"contact-form\" onSubmit={handleSubmit}>\r\n                        <h2>Únete al equipo</h2>\r\n                        <label>\r\n                            Nombre\r\n                            <input type=\"text\" name=\"nombre\" value={form.nombre} onChange={handleChange} required />\r\n                        </label>\r\n                        <label>\r\n                            Email\r\n                            <input type=\"email\" name=\"email\" value={form.email} onChange={handleChange} required />\r\n                        </label>\r\n                        <label>\r\n                            Mensaje\r\n                            <textarea name=\"mensaje\" value={form.mensaje} onChange={handleChange} required />\r\n                        </label>\r\n                        <button type=\"submit\" className=\"btn-primary\">Enviar</button>\r\n                    </form>\r\n                ) : (\r\n                    <div className=\"modal-success\">\r\n                        <h3>¡Gracias por tu interés!</h3>\r\n                        <p>Tu mensaje ha sido enviado.</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Home = () => {\r\n    const { user } = useAuth();\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {/* Hero Section */}\r\n            <section className=\"hero\">\r\n                <div className=\"hero-content\">\r\n                    <h1>Bienvenido al Equipo de Basketball</h1>\r\n                    {user ? (\r\n                        <div className=\"welcome-user\">\r\n                            <p>¡Hola {user.email}!</p>\r\n                            <p>Rol: {user.role === 'admin' ? 'Administrador' : 'Jugador'}</p>\r\n                        </div>\r\n                    ) : (\r\n                        <p>\r\n                            Únete a nosotros en esta increíble aventura deportiva.\r\n                            Somos más que un equipo, somos una familia.\r\n                        </p>\r\n                    )}\r\n                    <div className=\"hero-buttons\">\r\n                        {!user ? (\r\n                            <>\r\n                                <button className=\"btn-primary\" onClick={() => setModalOpen(true)}>\r\n                                    Únete al Equipo\r\n                                </button>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <button className=\"btn-primary\">\r\n                                    Ver Mi Perfil\r\n                                </button>\r\n                                <button className=\"btn-secondary\">\r\n                                    Ver Equipo\r\n                                </button>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div className=\"hero-image\">\r\n                    <img\r\n                        src=\"/api/placeholder/600/400\"\r\n                        alt=\"Equipo de Basketball\"\r\n                    />\r\n                </div>\r\n            </section>\r\n\r\n            <ContactModal isOpen={modalOpen} onClose={() => setModalOpen(false)} />\r\n\r\n            {/* Test Credentials Section - Solo mostrar si no está logueado */}\r\n            {!user && (\r\n                <section className=\"test-credentials\">\r\n                    <div className=\"container\">\r\n                        <h2>🔐 Credenciales de Prueba</h2>\r\n                        <p>Puedes usar estas credenciales para probar la aplicación:</p>\r\n                        <div className=\"credentials-grid\">\r\n                            <div className=\"credential-card admin\">\r\n                                <h3>👨‍💼 Administrador</h3>\r\n                                <p><strong>Email:</strong> admin@basketballteam.com</p>\r\n                                <p><strong>Password:</strong> admin123</p>\r\n                                <p>Acceso completo al sistema</p>\r\n                            </div>\r\n                            <div className=\"credential-card player\">\r\n                                <h3>🏀 Jugador 1</h3>\r\n                                <p><strong>Email:</strong> player1@basketballteam.com</p>\r\n                                <p><strong>Password:</strong> player123</p>\r\n                                <p>Juan Carlos Rodriguez - Point Guard</p>\r\n                            </div>\r\n                            <div className=\"credential-card player\">\r\n                                <h3>🏀 Jugador 2</h3>\r\n                                <p><strong>Email:</strong> player2@basketballteam.com</p>\r\n                                <p><strong>Password:</strong> player123</p>\r\n                                <p>Miguel Angel Torres - Shooting Guard</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            )}\r\n\r\n            {/* Stats Section */}\r\n            <section className=\"stats\">\r\n                <div className=\"stats-container\">\r\n                    <div className=\"stat-item\">\r\n                        <h3>50+</h3>\r\n                        <p>Jugadores</p>\r\n                    </div>\r\n                    <div className=\"stat-item\">\r\n                        <h3>25</h3>\r\n                        <p>Partidos Ganados</p>\r\n                    </div>\r\n                    <div className=\"stat-item\">\r\n                        <h3>5</h3>\r\n                        <p>Años de Historia</p>\r\n                    </div>\r\n                    <div className=\"stat-item\">\r\n                        <h3>100%</h3>\r\n                        <p>Dedicación</p>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            {/* Features Section */}\r\n            <section className=\"features\">\r\n                <div className=\"features-container\">\r\n                    <h2>¿Por qué elegir nuestro equipo?</h2>\r\n                    <div className=\"features-grid\">\r\n                        <div className=\"feature-card\">\r\n                            <div className=\"feature-icon\">🏆</div>\r\n                            <h3>Entrenamiento Profesional</h3>\r\n                            <p>\r\n                                Contamos con entrenadores certificados y métodos\r\n                                de entrenamiento de última generación.\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"feature-card\">\r\n                            <div className=\"feature-icon\">🤝</div>\r\n                            <h3>Ambiente Familiar</h3>\r\n                            <p>\r\n                                Fomentamos un ambiente de respeto, compañerismo\r\n                                y crecimiento personal.\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"feature-card\">\r\n                            <div className=\"feature-icon\">📈</div>\r\n                            <h3>Desarrollo Personal</h3>\r\n                            <p>\r\n                                No solo desarrollamos habilidades deportivas,\r\n                                sino también valores y liderazgo.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","usedDeprecatedRules":[]},{"filePath":"c:\\Users\\jzuta\\proyectos\\baloncestoteam\\frontend\\src\\components\\Login.jsx","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":13,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":13,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[454,490],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":39,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":39,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1219,1255],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":42,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":42,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1341,1379],"text":""},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n    const { login, loading } = useAuth();\r\n    const navigate = useNavigate();\r\n    const [form, setForm] = useState({ email: '', password: '' });\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    // LOG: render Login\r\n    console.log('[LOGIN] render', form);\r\n\r\n    const handleChange = (e) => {\r\n        setForm({ ...form, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const validate = () => {\r\n        if (!form.email || !form.password) {\r\n            setError('Todos los campos son obligatorios');\r\n            return false;\r\n        }\r\n        // Validación básica de email\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        if (!emailRegex.test(form.email)) {\r\n            setError('Email no válido');\r\n            return false;\r\n        }\r\n        setError('');\r\n        return true;\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!validate()) return;\r\n        setError('');\r\n        // LOG: submit login\r\n        console.log('[LOGIN] submit', form);\r\n        const result = await login(form);\r\n        // LOG: resultado login\r\n        console.log('[LOGIN] result', result);\r\n        if (result.success) {\r\n            navigate('/');\r\n        } else {\r\n            setError(result.error || 'Error al iniciar sesión');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <form className=\"login-form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n                <h2>Iniciar Sesión</h2>\r\n                <label>\r\n                    Email\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={form.email}\r\n                        onChange={handleChange}\r\n                        required\r\n                        autoComplete=\"username\"\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Contraseña\r\n                    <div className=\"password-input-wrapper\">\r\n                        <input\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            name=\"password\"\r\n                            value={form.password}\r\n                            onChange={handleChange}\r\n                            required\r\n                            autoComplete=\"current-password\"\r\n                        />\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"show-password-btn\"\r\n                            onClick={() => setShowPassword((v) => !v)}\r\n                            tabIndex={-1}\r\n                            aria-label={showPassword ? 'Ocultar contraseña' : 'Mostrar contraseña'}\r\n                        >\r\n                            {showPassword ? '🙈' : '👁️'}\r\n                        </button>\r\n                    </div>\r\n                </label>\r\n                {error && <div className=\"form-error\">{error}</div>}\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn-primary\"\r\n                    disabled={loading}\r\n                >\r\n                    {loading ? 'Ingresando...' : 'Ingresar'}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","usedDeprecatedRules":[]},{"filePath":"c:\\Users\\jzuta\\proyectos\\baloncestoteam\\frontend\\src\\components\\PlayerList.js","messages":[{"ruleId":"jsx-a11y/click-events-have-key-events","severity":1,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":70,"column":25,"nodeType":"JSXOpeningElement","endLine":75,"endColumn":26},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":1,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":70,"column":25,"nodeType":"JSXOpeningElement","endLine":75,"endColumn":26}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { playersAPI } from '../api/client';\r\n\r\nconst PlayerList = () => {\r\n    const navigate = useNavigate();\r\n    const {\r\n        data: playersData,\r\n        isLoading,\r\n        error,\r\n        refetch\r\n    } = useQuery('players', () => playersAPI.getAll());\r\n\r\n    // Función para navegar al perfil del jugador\r\n    const handlePlayerClick = (playerId) => {\r\n        navigate(`/players/${playerId}`);\r\n    };\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"loading-container\">\r\n                <div className=\"loading-spinner\"></div>\r\n                <p>Cargando jugadores...</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"error-container\">\r\n                <h3>Error al cargar jugadores</h3>\r\n                <p>{error.response?.data?.msg || 'Error desconocido'}</p>\r\n                <button onClick={refetch} className=\"btn-primary\">\r\n                    Reintentar\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const players = playersData?.data?.data || [];\r\n\r\n    return (\r\n        <div className=\"player-list\">\r\n            <div className=\"player-list-header\">\r\n                <h2>Nuestros Jugadores</h2>\r\n                <p>Conoce a los integrantes de nuestro equipo</p>\r\n                <div className=\"list-stats\">\r\n                    <div className=\"stat-chip\">\r\n                        <span className=\"stat-number\">{players.length}</span>\r\n                        <span className=\"stat-text\">Jugadores</span>\r\n                    </div>\r\n                    {playersData?.data?.meta?.total && (\r\n                        <div className=\"stat-chip\">\r\n                            <span className=\"stat-number\">{playersData.data.meta.total}</span>\r\n                            <span className=\"stat-text\">Total</span>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {players.length === 0 ? (\r\n                <div className=\"empty-state\">\r\n                    <h3>No hay jugadores registrados</h3>\r\n                    <p>Sé el primero en unirte al equipo</p>\r\n                </div>\r\n            ) : (\r\n                <div className=\"players-grid\">\r\n                    {players.map((player) => (\r\n                        <div\r\n                            key={player._id}\r\n                            className=\"player-card clickable\"\r\n                            onClick={() => handlePlayerClick(player._id)}\r\n                            title={`Ver perfil de ${player.name}`}\r\n                        >\r\n                            <div className=\"player-avatar\">\r\n                                <img\r\n                                    src={player.avatar || '/default-avatar.svg'}\r\n                                    alt={`${player.name || 'Jugador'}`}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"player-info\">\r\n                                <h3>{player.name || 'Nombre no disponible'}</h3>\r\n                                <p className=\"player-position\">{player.position}</p>\r\n\r\n                                <div className=\"player-stats\">\r\n                                    <div className=\"stat\">\r\n                                        <span className=\"stat-label\">Altura:</span>\r\n                                        <span className=\"stat-value\">{player.height} cm</span>\r\n                                    </div>\r\n                                    <div className=\"stat\">\r\n                                        <span className=\"stat-label\">Peso:</span>\r\n                                        <span className=\"stat-value\">{player.weight} kg</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {player.stats && (\r\n                                    <div className=\"player-performance\">\r\n                                        <h4>Estadísticas</h4>\r\n                                        <div className=\"performance-stats\">\r\n                                            <div className=\"perf-stat\">\r\n                                                <span>Partidos:</span>\r\n                                                <span>{player.stats.games_played || 0}</span>\r\n                                            </div>\r\n                                            <div className=\"perf-stat\">\r\n                                                <span>Puntos/Partido:</span>\r\n                                                <span>{player.stats.points_per_game || 0}</span>\r\n                                            </div>\r\n                                            <div className=\"perf-stat\">\r\n                                                <span>Rebotes/Partido:</span>\r\n                                                <span>{player.stats.rebounds_per_game || 0}</span>\r\n                                            </div>\r\n                                            <div className=\"perf-stat\">\r\n                                                <span>Asistencias/Partido:</span>\r\n                                                <span>{player.stats.assists_per_game || 0}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n\r\n                                {/* Botón para ver más detalles */}\r\n                                <div className=\"player-actions\">\r\n                                    <button\r\n                                        className=\"btn btn-primary view-profile-btn\"\r\n                                        onClick={(e) => {\r\n                                            e.stopPropagation();\r\n                                            handlePlayerClick(player._id);\r\n                                        }}\r\n                                    >\r\n                                        Ver Perfil Completo\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n            {/* Pagination */}\r\n            {playersData?.data?.meta?.total > playersData?.data?.meta?.limit && (\r\n                <div className=\"pagination\">\r\n                    {/* Add pagination controls here */}\r\n                    <p>\r\n                        Mostrando {players.length} de {playersData.data.meta.total} jugadores\r\n                    </p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PlayerList;\r\n","usedDeprecatedRules":[]},{"filePath":"c:\\Users\\jzuta\\proyectos\\baloncestoteam\\frontend\\src\\components\\PlayerProfile.jsx","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":25,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":25,"endColumn":30,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[674,721],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":1,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":103,"column":17,"nodeType":"JSXOpeningElement","endLine":103,"endColumn":81},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":1,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":103,"column":17,"nodeType":"JSXOpeningElement","endLine":103,"endColumn":81},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":1,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":107,"column":17,"nodeType":"JSXOpeningElement","endLine":107,"endColumn":88},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":1,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":107,"column":17,"nodeType":"JSXOpeningElement","endLine":107,"endColumn":88},{"ruleId":"jsx-a11y/label-has-associated-control","severity":1,"message":"A form label must be associated with a control.","line":168,"column":33,"nodeType":"JSXOpeningElement","endLine":168,"endColumn":40},{"ruleId":"jsx-a11y/label-has-associated-control","severity":1,"message":"A form label must be associated with a control.","line":172,"column":33,"nodeType":"JSXOpeningElement","endLine":172,"endColumn":40},{"ruleId":"jsx-a11y/label-has-associated-control","severity":1,"message":"A form label must be associated with a control.","line":176,"column":33,"nodeType":"JSXOpeningElement","endLine":176,"endColumn":40},{"ruleId":"jsx-a11y/label-has-associated-control","severity":1,"message":"A form label must be associated with a control.","line":180,"column":33,"nodeType":"JSXOpeningElement","endLine":180,"endColumn":40},{"ruleId":"jsx-a11y/label-has-associated-control","severity":1,"message":"A form label must be associated with a control.","line":241,"column":33,"nodeType":"JSXOpeningElement","endLine":241,"endColumn":40},{"ruleId":"jsx-a11y/label-has-associated-control","severity":1,"message":"A form label must be associated with a control.","line":245,"column":33,"nodeType":"JSXOpeningElement","endLine":245,"endColumn":40},{"ruleId":"jsx-a11y/label-has-associated-control","severity":1,"message":"A form label must be associated with a control.","line":250,"column":37,"nodeType":"JSXOpeningElement","endLine":250,"endColumn":44}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useQuery } from 'react-query';\r\nimport { playersAPI } from '../api/client';\r\nimport '../styles/PlayerProfile.css';\r\n\r\nconst PlayerProfile = () => {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    // Query para obtener los datos del jugador\r\n    const {\r\n        data: playerData,\r\n        isLoading,\r\n        isError,\r\n        error,\r\n        refetch\r\n    } = useQuery(\r\n        ['player', id],\r\n        () => playersAPI.getById(id),\r\n        {\r\n            enabled: !!id,\r\n            retry: 2,\r\n            onError: (error) => {\r\n                console.error('Error fetching player:', error);\r\n            }\r\n        }\r\n    );\r\n\r\n    // Estados de carga y error\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"player-profile\">\r\n                <div className=\"loading-container\">\r\n                    <div className=\"loading-spinner\"></div>\r\n                    <p>Cargando información del jugador...</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (isError) {\r\n        return (\r\n            <div className=\"player-profile\">\r\n                <div className=\"error-container\">\r\n                    <h2>Error al cargar jugador</h2>\r\n                    <p>{error?.response?.data?.message || 'No se pudo cargar la información del jugador'}</p>\r\n                    <div className=\"error-actions\">\r\n                        <button onClick={() => refetch()} className=\"btn btn-primary\">\r\n                            Intentar de nuevo\r\n                        </button>\r\n                        <button onClick={() => navigate('/players')} className=\"btn btn-secondary\">\r\n                            Volver a la lista\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const player = playerData?.data?.data;\r\n\r\n    if (!player) {\r\n        return (\r\n            <div className=\"player-profile\">\r\n                <div className=\"error-container\">\r\n                    <h2>Jugador no encontrado</h2>\r\n                    <p>El jugador que buscas no existe o ha sido eliminado.</p>\r\n                    <button onClick={() => navigate('/players')} className=\"btn btn-primary\">\r\n                        Volver a la lista\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Función para formatear fecha\r\n    const formatDate = (dateString) => {\r\n        if (!dateString) return 'No especificado';\r\n        return new Date(dateString).toLocaleDateString('es-ES', {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric'\r\n        });\r\n    };\r\n\r\n    // Función para formatear altura\r\n    const formatHeight = (height) => {\r\n        if (!height) return 'No especificado';\r\n        return `${height} cm`;\r\n    };\r\n\r\n    // Función para formatear peso\r\n    const formatWeight = (weight) => {\r\n        if (!weight) return 'No especificado';\r\n        return `${weight} kg`;\r\n    };\r\n\r\n    return (\r\n        <div className=\"player-profile\">\r\n            {/* Breadcrumbs */}\r\n            <nav className=\"breadcrumbs\">\r\n                <span onClick={() => navigate('/')} className=\"breadcrumb-item\">\r\n                    🏠 Inicio\r\n                </span>\r\n                <span className=\"breadcrumb-separator\">›</span>\r\n                <span onClick={() => navigate('/players')} className=\"breadcrumb-item\">\r\n                    👥 Jugadores\r\n                </span>\r\n                <span className=\"breadcrumb-separator\">›</span>\r\n                <span className=\"breadcrumb-current\">\r\n                    {player ? `👤 ${player.name}` : 'Cargando...'}\r\n                </span>\r\n            </nav>\r\n\r\n            {/* Header con navegación */}\r\n            <div className=\"profile-header\">\r\n                <button\r\n                    onClick={() => navigate('/players')}\r\n                    className=\"btn btn-back\"\r\n                >\r\n                    ← Volver a la lista\r\n                </button>\r\n                <h1>Perfil del Jugador</h1>\r\n                <div className=\"header-actions\">\r\n                    <button\r\n                        onClick={() => refetch()}\r\n                        className=\"btn btn-refresh\"\r\n                        title=\"Actualizar información\"\r\n                    >\r\n                        🔄 Actualizar\r\n                    </button>\r\n                </div>\r\n            </div>            {/* Información principal del jugador */}\r\n            <div className=\"profile-content\">\r\n                <div className=\"profile-main\">\r\n                    <div className=\"player-card\">\r\n                        <div className=\"player-avatar\">\r\n                            <img\r\n                                src={player.photo || '/default-avatar.svg'}\r\n                                alt={player.name}\r\n                                onError={(e) => {\r\n                                    e.target.src = '/default-avatar.svg';\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"player-info\">\r\n                            <h2>{player.name}</h2>\r\n                            <p className=\"player-position\">{player.position}</p>\r\n                            {player.user_id && (\r\n                                <div className=\"user-info\">\r\n                                    <span className=\"user-email\">\r\n                                        📧 {player.user_id.email}\r\n                                    </span>\r\n                                    <span className={`user-status ${player.user_id.isActive ? 'active' : 'inactive'}`}>\r\n                                        {player.user_id.isActive ? '🟢 Activo' : '🔴 Inactivo'}\r\n                                    </span>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Información física */}\r\n                    <div className=\"info-section\">\r\n                        <h3>Información Física</h3>\r\n                        <div className=\"info-grid\">\r\n                            <div className=\"info-item\">\r\n                                <label>Altura:</label>\r\n                                <span>{formatHeight(player.height)}</span>\r\n                            </div>\r\n                            <div className=\"info-item\">\r\n                                <label>Peso:</label>\r\n                                <span>{formatWeight(player.weight)}</span>\r\n                            </div>\r\n                            <div className=\"info-item\">\r\n                                <label>Fecha de nacimiento:</label>\r\n                                <span>{formatDate(player.birthdate)}</span>\r\n                            </div>\r\n                            <div className=\"info-item\">\r\n                                <label>Número de camiseta:</label>\r\n                                <span>{player.jersey_number || 'No asignado'}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Estadísticas */}\r\n                    {player.stats && (\r\n                        <div className=\"info-section\">\r\n                            <h3>Estadísticas por Partido</h3>\r\n                            <div className=\"stats-grid\">\r\n                                <div className=\"stat-item\">\r\n                                    <span className=\"stat-value\">{player.stats.points_per_game || 0}</span>\r\n                                    <span className=\"stat-label\">Puntos</span>\r\n                                </div>\r\n                                <div className=\"stat-item\">\r\n                                    <span className=\"stat-value\">{player.stats.rebounds_per_game || 0}</span>\r\n                                    <span className=\"stat-label\">Rebotes</span>\r\n                                </div>\r\n                                <div className=\"stat-item\">\r\n                                    <span className=\"stat-value\">{player.stats.assists_per_game || 0}</span>\r\n                                    <span className=\"stat-label\">Asistencias</span>\r\n                                </div>\r\n                                <div className=\"stat-item\">\r\n                                    <span className=\"stat-value\">{player.stats.games_played || 0}</span>\r\n                                    <span className=\"stat-label\">Partidos</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Métricas calculadas */}\r\n                    {player.metrics && (\r\n                        <div className=\"info-section\">\r\n                            <h3>Totales de Temporada</h3>\r\n                            <div className=\"metrics-grid\">\r\n                                <div className=\"metric-item\">\r\n                                    <span className=\"metric-value\">{player.metrics.total_points}</span>\r\n                                    <span className=\"metric-label\">Puntos Totales</span>\r\n                                </div>\r\n                                <div className=\"metric-item\">\r\n                                    <span className=\"metric-value\">{player.metrics.total_rebounds}</span>\r\n                                    <span className=\"metric-label\">Rebotes Totales</span>\r\n                                </div>\r\n                                <div className=\"metric-item\">\r\n                                    <span className=\"metric-value\">{player.metrics.total_assists}</span>\r\n                                    <span className=\"metric-label\">Asistencias Totales</span>\r\n                                </div>\r\n                                <div className=\"metric-item efficiency\">\r\n                                    <span className=\"metric-value\">{player.metrics.efficiency}</span>\r\n                                    <span className=\"metric-label\">Eficiencia</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Información adicional */}\r\n                    <div className=\"info-section\">\r\n                        <h3>Información Adicional</h3>\r\n                        <div className=\"info-grid\">\r\n                            <div className=\"info-item\">\r\n                                <label>Registrado el:</label>\r\n                                <span>{formatDate(player.createdAt)}</span>\r\n                            </div>\r\n                            <div className=\"info-item\">\r\n                                <label>Última actualización:</label>\r\n                                <span>{formatDate(player.updatedAt)}</span>\r\n                            </div>\r\n                            {player.user_id?.createdAt && (\r\n                                <div className=\"info-item\">\r\n                                    <label>Usuario creado:</label>\r\n                                    <span>{formatDate(player.user_id.createdAt)}</span>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PlayerProfile;\r\n","usedDeprecatedRules":[]},{"filePath":"c:\\Users\\jzuta\\proyectos\\baloncestoteam\\frontend\\src\\components\\Profile.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"c:\\Users\\jzuta\\proyectos\\baloncestoteam\\frontend\\src\\components\\Signup.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"c:\\Users\\jzuta\\proyectos\\baloncestoteam\\frontend\\src\\components\\app.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"c:\\Users\\jzuta\\proyectos\\baloncestoteam\\frontend\\src\\components\\footer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"c:\\Users\\jzuta\\proyectos\\baloncestoteam\\frontend\\src\\components\\header.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"c:\\Users\\jzuta\\proyectos\\baloncestoteam\\frontend\\src\\components\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"c:\\Users\\jzuta\\proyectos\\baloncestoteam\\frontend\\src\\components\\signupform.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"c:\\Users\\jzuta\\proyectos\\baloncestoteam\\frontend\\src\\context\\AuthContext.js","messages":[{"ruleId":"react/prop-types","severity":1,"message":"'children' is missing in props validation","line":15,"column":32,"nodeType":"Property","messageId":"missingPropType","endLine":15,"endColumn":40},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":29,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":29,"endColumn":30,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[981,1030],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":57,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":57,"endColumn":24,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1977,2027],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":58,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":58,"endColumn":24,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[2041,2130],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":59,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":59,"endColumn":24,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[2144,2231],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":98,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":98,"endColumn":26,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[3458,3503],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":107,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":107,"endColumn":24,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[3857,3908],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":129,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":129,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4412,4520],"text":""},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { authAPI } from '../api/client';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [authVersion, setAuthVersion] = useState(0);\r\n\r\n    useEffect(() => {\r\n        // Check if user is logged in on app start\r\n        const token = localStorage.getItem('token');\r\n        const savedUser = localStorage.getItem('user');\r\n\r\n        if (token && savedUser && savedUser !== 'undefined') {\r\n            try {\r\n                setUser(JSON.parse(savedUser));\r\n            } catch (error) {\r\n                console.error('Error parsing user data:', error);\r\n                localStorage.removeItem('token');\r\n                localStorage.removeItem('user');\r\n            }\r\n        } else if (savedUser === 'undefined' || !savedUser || !token) {\r\n            // Clean up corrupted data\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('user');\r\n        }\r\n\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    const login = async (credentials) => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await authAPI.login(credentials);\r\n            const { user, token } = response.data;\r\n\r\n            // Save to localStorage\r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n\r\n            setUser(user);\r\n            setAuthVersion(v => v + 1); // Forzar re-render global\r\n            toast.success('¡Bienvenido de vuelta!');\r\n\r\n            // LOG: usuario tras login\r\n            console.log('[AUTHCONTEXT] login -> user:', user);\r\n            console.log('[AUTHCONTEXT] login -> localStorage token:', localStorage.getItem('token'));\r\n            console.log('[AUTHCONTEXT] login -> localStorage user:', localStorage.getItem('user'));\r\n\r\n            return { success: true, user };\r\n        } catch (error) {\r\n            const message = error.response?.data?.msg || 'Error al iniciar sesión';\r\n            toast.error(message);\r\n            return { success: false, error: message };\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const register = async (userData) => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await authAPI.register(userData);\r\n            const { user, token } = response.data;\r\n\r\n            // Save to localStorage\r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n\r\n            setUser(user);\r\n            toast.success('¡Cuenta creada exitosamente!');\r\n\r\n            return { success: true, user };\r\n        } catch (error) {\r\n            const message = error.response?.data?.msg || 'Error al crear la cuenta';\r\n            toast.error(message);\r\n            return { success: false, error: message };\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const logout = async () => {\r\n        try {\r\n            await authAPI.logout();\r\n        } catch (error) {\r\n            console.error('Error during logout:', error);\r\n        } finally {\r\n            // Clear local storage and state\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('user');\r\n            setUser(null);\r\n            setAuthVersion(v => v + 1); // Forzar re-render global\r\n            toast.info('Sesión cerrada');\r\n            // LOG: usuario tras logout\r\n            console.log('[AUTHCONTEXT] logout -> user:', user);\r\n        }\r\n    };\r\n\r\n    const updateUser = (updatedUser) => {\r\n        setUser(updatedUser);\r\n        localStorage.setItem('user', JSON.stringify(updatedUser));\r\n    };\r\n\r\n    const value = {\r\n        user,\r\n        loading,\r\n        login,\r\n        register,\r\n        logout,\r\n        updateUser,\r\n        isAuthenticated: !!user,\r\n        isAdmin: user?.role === 'admin',\r\n        authVersion, // Para forzar re-render en consumidores si es necesario\r\n    };\r\n\r\n    // LOG: render AuthProvider\r\n    console.log('[AUTHCONTEXT] render -> user:', user, 'isAuthenticated:', !!user, 'authVersion:', authVersion);\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {/* authVersion fuerza re-render global */}\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"c:\\Users\\jzuta\\proyectos\\baloncestoteam\\frontend\\src\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]