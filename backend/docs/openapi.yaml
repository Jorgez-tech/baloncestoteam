openapi: 3.0.0
info:
    title: Basketball Team API
    description: API para gestión de equipo de baloncesto
    version: 1.0.0
    contact:
        name: Basketball Team
        email: contact@basketballteam.com

servers:
    - url: http://localhost:5000/api/v1
      description: Servidor de desarrollo
    - url: https://api.basketballteam.com/v1
      description: Servidor de producción

components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT

    schemas:
        User:
            type: object
            properties:
                id:
                    type: string
                    example: '64f1234567890abcdef12345'
                email:
                    type: string
                    format: email
                    example: 'usuario@example.com'
                name:
                    type: string
                    nullable: true
                    example: 'Juan Pérez'
                    description: Nombre completo del usuario
                role:
                    type: string
                    enum: [user, admin]
                    default: user
                    example: 'user'
                isActive:
                    type: boolean
                    default: true
                    example: true
                    description: Estado de activación del usuario
                createdAt:
                    type: string
                    format: date-time
                    example: '2023-01-15T10:30:00Z'
                updatedAt:
                    type: string
                    format: date-time
                    example: '2023-01-20T14:45:00Z'

        Player:
            type: object
            properties:
                id:
                    type: string
                    example: '64f1234567890abcdef12345'
                user_id:
                    oneOf:
                        - type: string
                          example: '64f1234567890abcdef12345'
                        - $ref: '#/components/schemas/User'
                    description: ID del usuario asociado o objeto usuario completo
                name:
                    type: string
                    example: 'Juan Pérez'
                position:
                    type: string
                    enum: ['Point Guard', 'Shooting Guard', 'Small Forward', 'Power Forward', 'Center']
                    example: 'Point Guard'
                height:
                    type: number
                    minimum: 150
                    maximum: 230
                    example: 180
                    description: Altura en centímetros
                weight:
                    type: number
                    minimum: 50
                    maximum: 150
                    example: 75
                    description: Peso en kilogramos
                jersey_number:
                    type: number
                    minimum: 1
                    maximum: 99
                    example: 23
                    description: Número de camiseta
                age:
                    type: number
                    minimum: 16
                    maximum: 50
                    example: 25
                    description: Edad del jugador
                avatar:
                    type: string
                    nullable: true
                    example: 'avatar-123.jpg'
                    description: Nombre del archivo de avatar
                stats:
                    type: object
                    properties:
                        games_played:
                            type: number
                            minimum: 0
                            default: 0
                            example: 25
                        points_per_game:
                            type: number
                            minimum: 0
                            default: 0
                            example: 15.5
                        rebounds_per_game:
                            type: number
                            minimum: 0
                            default: 0
                            example: 8.2
                        assists_per_game:
                            type: number
                            minimum: 0
                            default: 0
                            example: 6.1
                createdAt:
                    type: string
                    format: date-time
                    example: '2023-01-15T10:30:00Z'
                updatedAt:
                    type: string
                    format: date-time
                    example: '2023-01-20T14:45:00Z'

        Error:
            type: object
            properties:
                msg:
                    type: string
                    example: 'Error message'
                code:
                    type: string
                    example: 'ERROR_CODE'

security:
    - bearerAuth: []

paths:
    /health:
        get:
            summary: Health check
            tags: [System]
            security: []
            responses:
                200:
                    description: Sistema funcionando correctamente
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: 'OK'
                                    timestamp:
                                        type: string
                                        format: date-time
                                    uptime:
                                        type: number

    /auth/register:
        post:
            summary: Registrar nuevo usuario
            tags: [Authentication]
            security: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    format: email
                                password:
                                    type: string
                                    minLength: 6
                            required:
                                - email
                                - password
            responses:
                201:
                    description: Usuario creado exitosamente
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                    user:
                                        $ref: '#/components/schemas/User'
                                    token:
                                        type: string
                400:
                    description: Error de validación
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /auth/login:
        post:
            summary: Iniciar sesión
            tags: [Authentication]
            security: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    format: email
                                password:
                                    type: string
                            required:
                                - email
                                - password
            responses:
                200:
                    description: Login exitoso
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                    user:
                                        $ref: '#/components/schemas/User'
                                    token:
                                        type: string
                401:
                    description: Credenciales inválidas
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /players:
        get:
            summary: Obtener lista de jugadores
            tags: [Players]
            security: []
            parameters:
                - name: page
                  in: query
                  description: Número de página
                  schema:
                      type: integer
                      minimum: 1
                      default: 1
                - name: limit
                  in: query
                  description: Elementos por página
                  schema:
                      type: integer
                      minimum: 1
                      maximum: 100
                      default: 20
                - name: position
                  in: query
                  description: Filtrar por posición
                  schema:
                      type: string
                - name: search
                  in: query
                  description: Buscar por nombre
                  schema:
                      type: string
                - name: sortBy
                  in: query
                  description: Campo para ordenar
                  schema:
                      type: string
                      default: 'nombre'
                - name: order
                  in: query
                  description: Orden ascendente o descendente
                  schema:
                      type: string
                      enum: [asc, desc]
                      default: 'asc'
            responses:
                200:
                    description: Lista de jugadores
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Player'
                                    meta:
                                        type: object
                                        properties:
                                            total:
                                                type: integer
                                            page:
                                                type: integer
                                            limit:
                                                type: integer

        post:
            summary: Crear nuevo jugador
            tags: [Players]
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: string
                                position:
                                    type: string
                                height:
                                    type: number
                                weight:
                                    type: number
                            required:
                                - user_id
                                - position
                                - height
                                - weight
            responses:
                201:
                    description: Jugador creado exitosamente
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Player'
                400:
                    description: Error de validación
                401:
                    description: No autorizado

    /players/{id}:
        put:
            summary: Actualizar jugador
            tags: [Players]
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Player'
            responses:
                200:
                    description: Jugador actualizado
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Player'
                404:
                    description: Jugador no encontrado
                401:
                    description: No autorizado

        delete:
            summary: Eliminar jugador
            tags: [Players]
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: Jugador eliminado
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Eliminado'
                404:
                    description: Jugador no encontrado
                401:
                    description: No autorizado

        get:
            summary: Obtener jugador por ID
            tags: [Players]
            security: []
            parameters:
                - name: id
                  in: path
                  required: true
                  description: ID único del jugador
                  schema:
                      type: string
                      example: '64f1234567890abcdef12345'
            responses:
                200:
                    description: Jugador encontrado
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                        example: true
                                    data:
                                        allOf:
                                            - $ref: '#/components/schemas/Player'
                                            - type: object
                                              properties:
                                                  metrics:
                                                      type: object
                                                      properties:
                                                          total_points:
                                                              type: number
                                                              example: 387
                                                          total_rebounds:
                                                              type: number
                                                              example: 205
                                                          total_assists:
                                                              type: number
                                                              example: 152
                                                          efficiency:
                                                              type: number
                                                              example: 29.8
                400:
                    description: ID inválido
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Jugador no encontrado
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /auth/profile:
        get:
            summary: Obtener perfil del usuario autenticado
            tags: [Authentication]
            responses:
                200:
                    description: Perfil del usuario
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    user:
                                        $ref: '#/components/schemas/User'
                401:
                    description: No autorizado
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Usuario no encontrado
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /auth/logout:
        post:
            summary: Cerrar sesión
            tags: [Authentication]
            responses:
                200:
                    description: Logout exitoso
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Logout successful'
                401:
                    description: No autorizado
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /users:
        get:
            summary: Obtener lista de usuarios (solo admin)
            tags: [Users]
            responses:
                200:
                    description: Lista de usuarios
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/User'
                401:
                    description: No autorizado
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /images/upload:
        post:
            summary: Subir imagen
            tags: [Images]
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                image:
                                    type: string
                                    format: binary
                                    description: Archivo de imagen
            responses:
                200:
                    description: Imagen subida exitosamente
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: 'Imagen subida exitosamente'
                                    filename:
                                        type: string
                                        example: 'image-1234567890.jpg'
                                    path:
                                        type: string
                                        example: './uploads/image-1234567890.jpg'
                                    size:
                                        type: number
                                        example: 1048576
                400:
                    description: Error en la subida
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                401:
                    description: No autorizado
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /images/{filename}:
        get:
            summary: Obtener imagen por nombre de archivo
            tags: [Images]
            security: []
            parameters:
                - name: filename
                  in: path
                  required: true
                  description: Nombre del archivo de imagen
                  schema:
                      type: string
                      example: 'image-1234567890.jpg'
            responses:
                200:
                    description: Imagen encontrada
                    content:
                        image/*:
                            schema:
                                type: string
                                format: binary
                404:
                    description: Imagen no encontrada
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /profiles/me:
        get:
            summary: Obtener perfil completo del usuario autenticado
            tags: [Profiles]
            responses:
                200:
                    description: Perfil del usuario
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/User'
                                    - type: object
                                      properties:
                                          player:
                                              $ref: '#/components/schemas/Player'
                                              description: Datos del jugador (solo si el usuario es jugador)
                401:
                    description: No autorizado
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Usuario no encontrado
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        put:
            summary: Actualizar perfil del usuario autenticado
            tags: [Profiles]
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    example: 'Juan Pérez'
                                email:
                                    type: string
                                    format: email
                                    example: 'juan.perez@example.com'
            responses:
                200:
                    description: Perfil actualizado
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                400:
                    description: Error de validación o email en uso
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                401:
                    description: No autorizado
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Usuario no encontrado
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /profiles/player:
        put:
            summary: Actualizar datos del jugador (solo para usuarios tipo jugador)
            tags: [Profiles]
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    example: 'Juan Pérez'
                                position:
                                    type: string
                                    enum: ['Point Guard', 'Shooting Guard', 'Small Forward', 'Power Forward', 'Center']
                                    example: 'Point Guard'
                                height:
                                    type: number
                                    minimum: 150
                                    maximum: 230
                                    example: 180
                                weight:
                                    type: number
                                    minimum: 50
                                    maximum: 150
                                    example: 75
                                jersey_number:
                                    type: number
                                    minimum: 1
                                    maximum: 99
                                    example: 23
                                age:
                                    type: number
                                    minimum: 16
                                    maximum: 50
                                    example: 25
                                avatar:
                                    type: string
                                    example: 'avatar-123.jpg'
                                stats:
                                    type: object
                                    properties:
                                        games_played:
                                            type: number
                                            minimum: 0
                                            example: 25
                                        points_per_game:
                                            type: number
                                            minimum: 0
                                            example: 15.5
                                        rebounds_per_game:
                                            type: number
                                            minimum: 0
                                            example: 8.2
                                        assists_per_game:
                                            type: number
                                            minimum: 0
                                            example: 6.1
            responses:
                200:
                    description: Datos del jugador actualizados
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Player'
                401:
                    description: No autorizado
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Solo los jugadores pueden actualizar estos datos
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Perfil de jugador no encontrado
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

tags:
    - name: System
      description: Endpoints del sistema
    - name: Authentication
      description: Autenticación y autorización
    - name: Players
      description: Gestión de jugadores
    - name: Users
      description: Gestión de usuarios
    - name: Images
      description: Gestión de imágenes
    - name: Profiles
      description: Gestión de perfiles de usuario
